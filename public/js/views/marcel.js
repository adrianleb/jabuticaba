// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Jabuticaba.Views.Marcel = (function(_super) {

    __extends(Marcel, _super);

    function Marcel() {
      this.callMe = __bind(this.callMe, this);
      return Marcel.__super__.constructor.apply(this, arguments);
    }

    Marcel.prototype.template = JST['marcel'];

    Marcel.prototype.el = "body";

    Marcel.prototype.events = {
      'click #send': 'send',
      'click #open-room': 'openRoom',
      'click #join-room': 'joinRoom',
      'click #generate-sound': 'generateSound'
    };

    Marcel.prototype.roomName = 'room-14';

    Marcel.prototype.initialize = function() {
      var _this = this;
      this.incommingContext = new webkitAudioContext();
      this.outputContext = new webkitAudioContext();
      console.debug('init marcelzz');
      console.log('hai');
      this.room = new DataChannel();
      this.room.onopen = function(user_id) {
        return console.log('onopen: ' + user_id);
      };
      this.room.onUserLeft = function(user_id) {
        return console.log('onUserLeft: ' + user_id);
      };
      this.incommingBuffer = this.incommingContext.createBufferSource();
      this.incommingBuffer.connect(this.outputContext.destination);
      this.incommingBuffer.buffer = this.incommingBuffer.start(0);
      this.incommingContext.decodeAudioData(this.incommingBuffer, (function(buffer) {
        return console.log('income', buffer);
      }), function(err) {
        return console.log(err, 'ERRORRRRR');
      });
      this.room.onmessage = function(msg) {
        var d;
        _this.$('#messages').append(msg);
        d = Base64Binary.decodeArrayBuffer(msg);
        console.log('hai', d);
        return _this.callMe(d);
      };
      this.render();
      return this.incommingBuffer = null;
    };

    Marcel.prototype.render = function() {
      return this.$el.html(this.template());
    };

    Marcel.prototype.callMe = function(d) {
      var _this = this;
      console.log('CALLLLL MEEWE');
      return this.incommingContext.decodeAudioData(d, (function(buffer) {
        var mySource;
        console.log('income', buffer);
        mySource = _this.outputContext.createBufferSource();
        mySource.buffer = buffer;
        mySource.connect(_this.outputContext.destination);
        return mySource.start(0);
      }), function(err) {
        return console.log(err, 'ERRORRRRR');
      });
    };

    Marcel.prototype.send = function(e) {
      nop(e);
      return this.room.send($('#msg').val());
    };

    Marcel.prototype.openRoom = function(e) {
      nop(e);
      return this.room.open(this.roomName);
    };

    Marcel.prototype.joinRoom = function(e) {
      nop(e);
      return this.room.connect(this.roomName);
    };

    Marcel.prototype.generateSound = function(e) {
      var _this = this;
      nop(e);
      cl('nonono: 99999');
      this.o = this.outputContext.createOscillator();
      this.js = this.outputContext.createScriptProcessor(256, 1, 1);
      this.o.frequency.value = 440;
      this.o.connect(this.js);
      this.js.onaudioprocess = function(e) {
        var msg;
        cl('onaudioprocess');
        msg = base64ArrayBuffer(e.inputBuffer.getChannelData(0).buffer);
        cl('sending: ' + msg);
        _this.room.send(msg);
        return e.outputBuffer.getChannelData(0).set(e.inputBuffer.getChannelData(0));
      };
      this.o.start(0);
      this.g = this.outputContext.createGainNode();
      this.js.connect(this.g);
      this.g.gain = 0;
      return this.g.connect(this.outputContext.destination);
    };

    return Marcel;

  })(Backbone.View);

}).call(this);
