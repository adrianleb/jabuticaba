// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Jabuticaba.Views.Marcel = (function(_super) {

    __extends(Marcel, _super);

    function Marcel() {
      return Marcel.__super__.constructor.apply(this, arguments);
    }

    Marcel.prototype.template = JST['marcel'];

    Marcel.prototype.el = "body";

    Marcel.prototype.events = {
      'click #send': 'send',
      'click #open-room': 'openRoom',
      'click #join-room': 'joinRoom'
    };

    Marcel.prototype.initialize = function() {
      var _this = this;
      console.debug('init marcelzz');
      this.room = new DataChannel('room');
      this.room.onopen = function(user_id) {
        return console.log('onopen: ' + user_id);
      };
      this.room.onUserLeft = function(user_id) {
        return console.log('onUserLeft: ' + user_id);
      };
      this.room.onmessage = function(msg) {
        return _this.$('#messages').append(msg + "<br/>");
      };
      return this.render();
    };

    Marcel.prototype.render = function() {
      return this.$el.append(this.template());
    };

    Marcel.prototype.send = function(e) {
      nop(e);
      cl('sending: ' + $('#msg').val());
      return this.room.send($('#msg').val());
    };

    Marcel.prototype.openRoom = function(e) {
      nop(e);
      return this.room.open('room');
    };

    Marcel.prototype.joinRoom = function(e) {
      nop(e);
      return this.room.connect('room');
    };

    return Marcel;

  })(Backbone.View);

}).call(this);
