// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  ShufflerDoc.Views.ResourcesMenu = (function(_super) {

    __extends(ResourcesMenu, _super);

    function ResourcesMenu() {
      return ResourcesMenu.__super__.constructor.apply(this, arguments);
    }

    ResourcesMenu.prototype.template = JST['menu'];

    ResourcesMenu.prototype.className = "menu_wrap";

    ResourcesMenu.prototype.initialize = function(options) {
      this.coll = options.resources;
      return this.render();
    };

    ResourcesMenu.prototype.render = function() {
      this.$el.html(this.template({
        resources: this.coll
      }));
      return this.initEvents();
    };

    ResourcesMenu.prototype.initEvents = function() {
      var _this = this;
      $(window).on('scroll', function(e) {
        var distanceToTop, el, id, navEl, offset, section, sections, wHeight, _i, _j, _len, _results;
        distanceToTop = $(document).scrollTop();
        if (distanceToTop > 100) {
          $('#go_up').removeClass('disabled');
        } else {
          $('#go_up').addClass('disabled');
        }
        sections = $('#content section');
        for (_i = 0, _len = sections.length; _i < _len; _i++) {
          section = sections[_i];
          el = $(section);
          offset = el.offset().top - distanceToTop;
          wHeight = $(window).height();
          if (__indexOf.call((function() {
            _results = [];
            for (var _j = -100; -100 <= wHeight ? _j < wHeight : _j > wHeight; -100 <= wHeight ? _j++ : _j--){ _results.push(_j); }
            return _results;
          }).apply(this), offset) >= 0) {
            id = $(section).attr('id');
            navEl = $("[href=#" + id + "]");
            if (!$(navEl).hasClass('active_nav')) {
              $('.active_nav').removeClass('active_nav');
              $(navEl).addClass('active_nav');
            }
            return false;
          }
        }
      });
      $(document).on('click', "#expand_collapse", function(e) {
        e.preventDefault();
        $('.method_more').toggleClass('open');
        return $(e.currentTarget).toggleClass('open');
      });
      $(document).on('click', "#collapse_all", function(e) {
        return $('.method_more').removeClass('open');
      });
      return $(document).on('click', "#go_up", function(e) {
        e.preventDefault();
        return $('body').animate({
          scrollTop: 0
        }, 250);
      });
    };

    return ResourcesMenu;

  })(Backbone.View);

}).call(this);
