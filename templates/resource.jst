function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var method, method_desc, resource_desc, _i, _len, _ref;
    
      __out.push('<section class="resource" id="');
    
      __out.push(__sanitize(this.resource.get('name').toLowerCase()));
    
      __out.push('">\n  <h2 class="resource_name">\n    ');
    
      __out.push(__sanitize(this.resource.get('name')));
    
      __out.push('\n  </h2>\n  <div class="resource_description">\n    ');
    
      if (this.resource.get('description') != null) {
        __out.push('\n      ');
        if (this.resource.get('description').indexOf('template:') === 0) {
          __out.push('\n        ');
          resource_desc = "descriptions/" + this.resource.get('description').replace('template:', '').replace(':', '/');
          __out.push('\n        ');
          __out.push(JST[resource_desc] != null ? JST[resource_desc]() : void 0);
          __out.push('\n      ');
        }
        __out.push('\n    ');
      }
    
      __out.push('\n  </div>\n  ');
    
      _ref = this.resource.get('methods');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        method = _ref[_i];
        __out.push('\n  <div class="method">\n    <h2 class="method_info">\n      <span class="method_method ');
        __out.push(__sanitize(method.method.toLowerCase()));
        __out.push('">');
        __out.push(__sanitize(method.method));
        __out.push('</span> \n      <span class="method_name">');
        __out.push(method.name.replace(/{(.+?)}/g, '<span class="method_name_param">{$1}</span>'));
        __out.push('</span> \n      <span class="method_return">');
        __out.push(__sanitize(method.returns));
        __out.push('</span> </h2>\n    <div class="method_more">\n      ');
        __out.push('\n      <div class="method_description">\n        ');
        if (method.description != null) {
          __out.push('\n          ');
          if (method.description.indexOf('template:') === 0) {
            __out.push('\n            ');
            method_desc = "descriptions/" + method.description.replace('template:', '').replace(':', '/');
            __out.push('\n            ');
            __out.push(JST[method_desc] ? JST[method_desc]() : void 0);
            __out.push('\n            ');
          } else {
            __out.push('\n            <p>');
            __out.push(__sanitize(method.description));
            __out.push('</p>\n            ');
          }
          __out.push('\n        ');
        }
        __out.push('\n      </div>\n      ');
        __out.push('\n      ');
        if (method.parameters != null) {
          __out.push('\n        <h3 class="example_lined">Parameters </h3>\n        <ul class="method_params">\n          ');
          _.each(method.parameters, function(value, key) {
            __out.push('\n            <li><b>');
            __out.push(__sanitize(key));
            __out.push('</b>: ');
            __out.push(__sanitize(value));
            return __out.push('</li>\n          ');
          });
          __out.push('\n        </ul>\n      ');
        }
        __out.push('\n      ');
        __out.push('\n      ');
        if ((method.authorization_required != null) && method.authorization_required) {
          __out.push('\n        <div class="example auth_example gapafter_x2 gapbefore">\n          <h3 class="auth_req">authorization required</h3>\n          ');
          if (method.scope != null) {
            __out.push('\n            <h3 class="scope">Scope: <b>');
            __out.push(__sanitize(method.scope));
            __out.push('</b></h3>\n          ');
          }
          __out.push('\n        </div>\n      ');
        }
        __out.push('\n      ');
        __out.push('\n      <h3 class="example">Example</h3>\n      <pre>$ curl "');
        __out.push(__sanitize(method.example_url));
        __out.push('"</pre>\n      ');
        if (method.example_result_type === 'JSON') {
          __out.push('\n        <h3 class="example">Result</h3>\n        <pre class="code_example">');
          __out.push(prettyJson(method.example_result));
          __out.push('</pre>\n      ');
        } else if (method.example_result != null) {
          __out.push('\n        <h3 class="example">Result</h3>\n        <pre class="code_example">');
          __out.push(__sanitize(method.example_result.replace('"', '')));
          __out.push('</pre>\n      ');
        }
        __out.push('\n    </div>\n  </div>\n  ');
      }
    
      __out.push('\n\n</section>\n\n\n\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}